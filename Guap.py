import datetime
from random import randint
import flet as ft
import pandas as pd
from data_base import PostgresConnection, ParquetStorage
import keyboard

# –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã
db = PostgresConnection(
    database="brick_game",
    password="PENROG21"
)
db.connect()

# –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Ñ–∞–π–ª—É –¥–ª—è –æ–∑–µ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö.
pq = ParquetStorage(r'C:\Users\user\PycharmProjects\pythonProject1\degs\Brick_Came\Data lake\data.parquet')
pq_topic = ParquetStorage(r'C:\Users\user\PycharmProjects\pythonProject1\degs\Brick_Came\Data lake\data_topic.parquet')


# page - —ç—Ç–æ –≤—Å—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
def main(page: ft.Page):
    try:
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–∏—Ä–ø–∏—á–µ–π
        number_bricks = int(randint(12, 20))

        # –î–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä
        quality_games = 0
        # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–±–µ–¥ –∏–≥—Ä–æ–∫–∞
        quality_win_player = 0
        # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–±–µ–¥ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞
        quality_win_computer = 0

        # –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        page.title = "Rainbow"
        # –®–∏—Ä–∏–Ω–∞
        page.window.width = 800
        # –í—ã—Å–æ—Ç–∞
        page.window.height = 800
        # –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –º–µ–Ω—è—Ç—å —Ä–∞–∑–º–µ—Ä –æ–∫–Ω–∞

        # –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø—Ä–µ–º–µ–Ω—ã–µ.
        login_user = None
        id_user = None

        def open_dialog(dialog_to_open: ft.AlertDialog):
            """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ.
            Args:
                dialog_to_open: –î–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –æ—Ç–∫—Ä—ã—Ç—å.
            """
            dialog_to_open.open = True
            dialog_to_open.update()

        def close_dialog(dialog_to_close: ft.AlertDialog):
            """–ó–∞–∫—Ä—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ.
            Args:
                dialog_to_close: –î–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –∑–∞–∫—Ä—ã—Ç—å.
            """
            dialog_to_close.open = False
            dialog_to_close.update()

        def load(e):
            """
            –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–≥—Ä—ã.
            """
            nonlocal id_user
            # –°–æ–∑–¥–∞–µ–º DataFrame
            result = db.table_for_save(int(id_user))
            df = pd.DataFrame([result], columns=['–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–±–µ–¥', '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä'])
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∫–æ–π —Ñ–æ—Ä–º–∞—Ç –Ω—É–∂–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            if dropdown.value == 'json':
                df.to_json('Brick_data.json', index=False)
            elif dropdown.value == 'excel':
                df.to_excel('Brick_data.xlsx', index=False)
            elif dropdown.value == 'csv':
                df.to_csv('Brick_data.csv', index=False)

            # –°–æ–æ–±—â–∞–µ–º —á—Ç–æ –¥–∞–Ω–Ω—ã–µ —Å–∫–∞—á–µ–Ω—ã.
            open_dialog(load_message)

        # –°–æ–∑–¥–∞–µ–º –¥–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—à–∏–±–∫–∏ –≤–≤–æ–¥–∞
        error_message = ft.AlertDialog(
            title=ft.Text("–û—à–∏–±–∫–∞ —Ö–æ–¥–∞", size=24, weight=ft.FontWeight.BOLD),  # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ–∫–Ω–∞
            content=ft.Text("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤–∑—è—Ç—å —Å—Ç–æ–ª—å–∫–æ –∫–∏—Ä–ø–∏—á–µ–π", size=16),  # –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            actions=[
                ft.TextButton(text="OK", on_click=lambda e: close_dialog(error_message)),  # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞
            ],
            modal=True,  # –î–µ–ª–∞–µ—Ç –¥–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ –º–æ–¥–∞–ª—å–Ω—ã–º
            open=False,  # –ù–∞—á–∞–ª—å–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ (–Ω–µ –æ—Ç–∫—Ä—ã—Ç–æ)
            elevation=8,  # –≠—Ñ—Ñ–µ–∫—Ç —Ç–µ–Ω–∏
        )

        # –°–æ–∑–¥–∞–µ–º –¥–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø–æ–±–µ–¥–µ
        victory_message = ft.AlertDialog(
            title=ft.Text("ü•á–í—ã –ø–æ–±–µ–¥–∏–ª–∏üèÜ", size=24, weight=ft.FontWeight.BOLD),  # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ–∫–Ω–∞
            content=ft.Text("–ü–æ–∑–¥—Ä–∞–≤–ª—è—é –≤—ã –≤–∑—è–ª–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π –∫–∏—Ä–ø–∏—á\n"
                            "–ò–≥—Ä–∞ –Ω–∞—á–Ω–µ—Ç—Å—è –∑–∞–Ω–æ–≤–æ", size=16),  # –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            actions=[
                ft.TextButton(text="–£—Ä–∞", on_click=lambda e: close_dialog(victory_message)),  # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞
            ],
            modal=True,  # –î–µ–ª–∞–µ—Ç –¥–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ –º–æ–¥–∞–ª—å–Ω—ã–º
            open=False,  # –ù–∞—á–∞–ª—å–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ (–Ω–µ –æ—Ç–∫—Ä—ã—Ç–æ)
            elevation=8,  # –≠—Ñ—Ñ–µ–∫—Ç —Ç–µ–Ω–∏
            icon_color='#3CB371'  # –¶–≤–µ—Ç –∏–∫–æ–Ω–∫–∏
        )

        # –°–æ–∑–¥–∞–µ–º –¥–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ –∑–∞–≥—Ä—É–∑–∫–µ
        load_message = ft.AlertDialog(
            title=ft.Text("–°–∫–∞—á–µ–Ω–æüì≤", size=24, weight=ft.FontWeight.BOLD),  # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ–∫–Ω–∞
            content=ft.Text("–î–∞–Ω–Ω—ã–µ —Å–∫–∞—á–µ–Ω—ã", size=16),  # –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            actions=[
                ft.TextButton(text="–•–æ—Ä–æ—à–æ", on_click=lambda e: close_dialog(load_message)),  # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞
            ],
            modal=True,  # –î–µ–ª–∞–µ—Ç –¥–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ –º–æ–¥–∞–ª—å–Ω—ã–º
            open=False,  # –ù–∞—á–∞–ª—å–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ (–Ω–µ –æ—Ç–∫—Ä—ã—Ç–æ)
            elevation=8,  # –≠—Ñ—Ñ–µ–∫—Ç —Ç–µ–Ω–∏
        )

        # –°–æ–∑–¥–∞–µ–º –¥–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø–æ—Ä–∞–∂–µ–Ω–∏–∏
        defeat_message = ft.AlertDialog(
            title=ft.Text("üò•–ü–æ—Ä–∞–∂–µ–Ω–∏–µ", size=24, weight=ft.FontWeight.BOLD),  # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ–∫–Ω–∞
            content=ft.Text("–ö–æ–º–ø—å—é—Ç–µ—Ä –≤–∑—è–ª –ø–æ—Å–ª–µ–¥–Ω–∏–π –∫–∏—Ä–ø–∏—á.\n"
                            "–ö–æ–º–ø—å—é—Ç–µ—Ä –∑–∞–Ω—è–ª –ø—Ä–µ–¥–ø–æ—Å–ª–µ–¥–Ω–µ–µ –º–µ—Å—Ç–æ, –∞ –≤—ã –≤—Ç–æ—Ä–æ–µü•àüòâ", size=16),  # –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            actions=[
                ft.TextButton(text="–†–µ–≤–∞–Ω—à", on_click=lambda e: close_dialog(defeat_message)),
                # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞
            ],
            modal=True,  # –î–µ–ª–∞–µ—Ç –¥–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ –º–æ–¥–∞–ª—å–Ω—ã–º
            open=False,  # –ù–∞—á–∞–ª—å–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ (–Ω–µ –æ—Ç–∫—Ä—ã—Ç–æ)
            elevation=8,  # –≠—Ñ—Ñ–µ–∫—Ç —Ç–µ–Ω–∏
        )

        rule_message = ft.AlertDialog(
            title=ft.Text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å", size=24, weight=ft.FontWeight.BOLD),  # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ–∫–Ω–∞
            content=ft.Text("–≠—Ç–æ –∏–≥—Ä–∞ '–ö–∏—Ä–ø–∏—á'\n–ü—Ä–∞–≤–∏–ª–æ:\n –í—ã –∏ –∫–æ–º–ø—å—é—Ç–µ—Ä –±–µ—Ä—ë—Ç–µ –∫–∏—Ä–ø–∏—á–∏ –ø–æ–æ—á–µ—Ä–µ–¥–Ω–æ.\n"
                            '–ó–∞ —Ö–æ–¥ –º–æ–∂–Ω–æ –≤–∑—è—Ç—å 1, 2 –∏–ª–∏ 3 –∫–∏—Ä–ø–∏—á–∞.\n'
                            "–ü—Ä–æ–∏–≥—Ä–∞–ª —Ç–æ—Ç, –∫–æ–º—É –Ω–µ—á–µ–≥–æ –±—Ä–∞—Ç—å.", size=16),  # –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ)
            actions=[
                ft.TextButton(text="–ò–≥—Ä–∞—Ç—å!", on_click=lambda e: close_dialog(rule_message)),
                # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞
            ],
            modal=True,  # –î–µ–ª–∞–µ—Ç –¥–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ –º–æ–¥–∞–ª—å–Ω—ã–º
            open=False,  # –ù–∞—á–∞–ª—å–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ (–Ω–µ –æ—Ç–∫—Ä—ã—Ç–æ)
            elevation=8,  # –≠—Ñ—Ñ–µ–∫—Ç —Ç–µ–Ω–∏
        )

        def change_theme(e):
            """
            –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –º–µ–Ω—è–µ—Ç —Ç–µ–º—É –Ω–∞ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—É—é.
            """
            if page.theme_mode == ft.ThemeMode.DARK:
                # –ï—Å–ª–∏ —Ç–µ–∫—É—â–∞—è —Ç–µ–º–∞ - —Ç–µ–º–Ω–∞—è, –º–µ–Ω—è–µ–º –µ–µ –Ω–∞ —Å–≤–µ—Ç–ª—É—é
                page.theme_mode = ft.ThemeMode.LIGHT
                page.Icon = ft.Icons.DARK_MODE_ROUNDED
                e.control.Icon = ft.Icons.DARK_MODE_ROUNDED

                pq_topic.add_data_topic(False, id_user)
            else:
                # –ï—Å–ª–∏ —Ç–µ–∫—É—â–∞—è —Ç–µ–º–∞ - —Å–≤–µ—Ç–ª–∞—è, –º–µ–Ω—è–µ–º –µ–µ –Ω–∞ —Ç–µ–º–Ω—É—é
                page.theme_mode = ft.ThemeMode.DARK
                page.Icon = ft.Icons.SUNNY
                e.control.Icon = ft.Icons.SUNNY

                pq_topic.add_data_topic(True, id_user)
            # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            page.update()

        # –ö–Ω–æ–ø–∫–∞ —Å–º–µ–Ω—ã —Ç–µ–º—ã.
        button_sunny = ft.IconButton(icon=ft.Icons.SUNNY, selected_icon=ft.Icons.MOOD_BAD, on_click=change_theme)

        # –°–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –∫–∏—Ä–ø–∏—á–µ–π
        output_number_brickse = ft.Text(value=f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∏—Ä–ø–∏—á–µ–π: {number_bricks}", size=32,
                                        weight=ft.FontWeight.BOLD)
        # –°–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ–±–µ–¥
        number_wins = ft.Text(value="", size=32, visible=False)

        def show_wins_number(e):
            """
            –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è —É–±–∏—Ä–∞–µ—Ç —Ç–µ–∫—Å—Ç –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –∏–≥—Ä–æ–∫–∞ –∏–ª–∏ –¥–æ–±–∞–≤–ª—è–µ—Ç
            """
            number_wins.visible = False if number_wins.visible is True else True
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É.
            page.update()

        show_number_wins = ft.IconButton(ft.Icons.REMOVE_RED_EYE, visible=False, on_click=show_wins_number)

        # –¢–µ–∫—Å—Ç –∫–∞–∫ —Å—Ö–æ–¥–∏–ª –∫–æ–º–ø—å—é—Ç–µ—Ä
        text_player_move = ft.Text(
            "",
            size=32,
            font_family="",
            weight=ft.FontWeight.W_100,
            visible=False  # –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ —Å–ø—Ä—è—Ç–∞—Ç—å
        )

        def after_one_game(playr_or_computer: bool):
            """
            –≠—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç –≤—Å–µ –¥–µ–π—Å—Ç–≤–∏—è –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–π –∏–≥—Ä—ã
            :param playr_or_computer:
            :return:
            """
            # –î–∞–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–∫–∞—á–∞—Ç—å –¥–∞–Ω–Ω—ã–µ
            dropdown.visible = True
            download_button.visible = True

            nonlocal quality_games, quality_win_player
            quality_games += 1
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏—Ç–æ–≥–∏ –∏–≥—Ä—ã
            if playr_or_computer:
                nonlocal quality_win_computer
                quality_win_computer += 1
            else:
                quality_win_player += 1

            # –í—ã–≤–æ–¥–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            show_number_wins.visible = True
            number_wins.value = f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä {quality_games} –ò–∑ –Ω–∏—Ö –ø–æ–±–µ–¥ {quality_win_player}"

            page.update()

        def computer_running(e):
            """
            –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ö–æ–¥–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞.
            """
            nonlocal text_player_move, output_number_brickse, number_bricks
            # –°–º–æ—Ç—Ä–∏–º —Å–∫–æ–ª—å–∫–æ –æ—Å—Ç–∞–ª–æ—Å—å –∫–∏—Ä–ø–∏—á–µ–π
            if number_bricks in (1, 2, 3):
                computer_player = number_bricks
            else:
                computer_player = randint(1, 3)  # –•–æ–¥ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞

            nonlocal id_user
            # –í—ã—á–∏—Ç–∞–µ–º —Ö–æ–¥ –∏–∑ –æ–±—â–µ–π —Å—É–º–º—ã –∫–∏—Ä–ø–∏—á–µ–π.
            number_bricks -= computer_player
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –æ–±—â–∏–π –¥–∞—Ç–∞ –ª–∞–π–∫
            pq.add_data(int(id_user), 2, computer_player, number_bricks)

            if number_bricks <= 0:  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ—Ä–∞–∂–µ–Ω–∏–µ
                # –°–æ–æ–±—â–∞–µ–º –æ –ø–æ—Ä–∞–∂–µ–Ω–∏–∏
                open_dialog(defeat_message)
                number_bricks = int(randint(12, 20))
                # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –±–¥
                db.record_game_result(int(id_user), False)
                # –û—Ç–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —Å–∫—Ä—ã—Ç—ã–µ –∫–Ω–æ–ø–∫–∏
                after_one_game(playr_or_computer=True)

            text_player_move.visible = True
            text_player_move.value = f"–•–æ–¥ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞: {computer_player}"

            output_number_brickse.value = f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∏—Ä–ø–∏—á–µ–π: {number_bricks}"
            page.update()

        def player_move(e):
            """
            –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ö–æ–¥–∞ –∏–≥—Ä–æ–∫–∞.
            """
            # –ü–æ–ª—É—á–∞–µ–º —Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            move = int(e.control.data)
            nonlocal number_bricks
            if number_bricks < move:
                # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ —Ö–æ–¥–∞
                open_dialog(error_message)
            else:
                # –í—ã—á–∏—Ç–∞–µ–º —Ö–æ–¥ –∏–≥—Ä–æ–∫–∞ –∏–∑ –æ–±—â–µ–π —Å—É–º–º—ã –∫–∏—Ä–ø–∏—á–µ–π.
                taken_bricks = int(move)
                # –í—ã—á–∏—Ç–∞–µ–º
                number_bricks -= taken_bricks
                # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –æ–±—â–∏–π –¥–∞—Ç–∞ –ª–∞–π–∫
                nonlocal id_user
                pq.add_data(int(id_user), 1, taken_bricks, number_bricks)

                if number_bricks <= 0:  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–±–µ–¥—É
                    db.record_game_result(int(id_user), True)
                    # –°–æ–æ–±—â–∞–µ –æ –ø–æ–±–µ–¥–µ
                    open_dialog(victory_message)
                    # –ì–µ–Ω–∏—Ä–∏—Ä—É–µ–º –∑–∞–Ω–æ–≤–æ
                    number_bricks = int(randint(12, 20))
                    # –û—Ç–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —Å–∫—Ä—ã—Ç—ã–µ –∫–Ω–æ–ø–∫–∏
                    after_one_game(playr_or_computer=False)

                    output_number_brickse.value = f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∏—Ä–ø–∏—á–µ–π: {number_bricks}"
                    page.update()
                else:
                    # –•–æ–¥ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞
                    computer_running(e)

        download_button = ft.ElevatedButton(
            text="–°–æ—Ö—Ä–∞–Ω–∏—Ç—å",
            on_click=load,
            color='#000000',
            visible=False,
            style=ft.ButtonStyle(
                bgcolor=ft.Colors.WHITE,  # –¶–≤–µ—Ç —Ñ–æ–Ω–∞ –∫–Ω–æ–ø–∫–∏.
                shape=ft.RoundedRectangleBorder(radius=10),  # –ó–∞–¥–∞–µ–º —Å–∫—Ä—É–≥–ª–µ–Ω–Ω—ã–µ —É–≥–ª—ã.
                overlay_color=ft.Colors.GREY,  # –¶–≤–µ—Ç –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
            )
        )

        dropdown = ft.Dropdown(
            options=[
                ft.dropdown.Option("excel"),
                ft.dropdown.Option("json"),
                ft.dropdown.Option("csv"),
            ],
            value='excel',
            visible=False
        )

        welcome_title = ft.Text(size=48, weight=ft.FontWeight.BOLD, selectable=True)

        def switching(where: bool):
            """
            –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ–º –º–µ–∂–¥—É —Å–ª–∞–π–¥–∞–º–∏.

            :param where: True –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ –∏–≥—Ä–æ–≤–æ–µ –æ–∫–Ω–æ, False –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é.
            """
            # –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏ –ø–µ—Ä–µ–≤–æ–¥ –≤ —Ç—ë–º–Ω—É—é —Ç–µ–º—É.
            page.clean()
            page.theme_mode = ft.ThemeMode.DARK
            if where:
                # –ó–∞–ø–æ–ª–Ω—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ.
                nonlocal login_user, id_user
                # –ü–æ–ª—É—á–µ–Ω–∏–µ –ª–æ–≥–∏–Ω–∞ —é–∑–µ—Ä–∞
                login_user = db.get_user_name_by_email(user_gmail.value)
                # –ü–æ–ª—É—á–µ–Ω–∏–µ id —é–∑–µ—Ä–∞
                id_user = db.get_user_id_by_name(login_user)
                # –£–±–∏—Ä–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π navigation_bar
                page.navigation_bar = None

                welcome_title.value = f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å {login_user}'

                show_page(0)
                page.add(
                    ft.Container(  # Container –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Å–µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ.
                        content=ft.Row([rail, current_page]),  # –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –≤ —Å—Ç—Ä–æ–∫—É.
                        expand=True  # –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É –∑–∞–Ω–∏–º–∞—Ç—å –≤—Å—é –¥–æ—Å—Ç—É–ø–Ω—É—é –ø–ª–æ—â–∞–¥—å.
                    )
                )
            else:
                # –û—á–∏—â–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª–µ–π –≤–≤–æ–¥–∞ –∏ —Å–∫—Ä—ã–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –∏–≥—Ä–æ–π.
                page.clean()
                user_login.value = None
                user_gmail.value = None
                selected_date.value = None
                gender_radio.value = None
                user_password.value = None
                btn_password.disabled = True
                btn_auth.disabled = True
                btn_reg.disabled = True

                text_player_move.visible = False
                number_wins.visible = False
                show_number_wins.visible = False
                dropdown.visible = False
                download_button.visible = False

                nonlocal quality_games, quality_win_player
                quality_games = 0
                quality_win_player = 0

                # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞–Ω–µ–ª—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—É—é –ø–∞–Ω–µ–ª—å.
                page.add(panel_auth)
                page.navigation_bar = switch
                page.theme_mode = ft.ThemeMode.DARK
                page.update()

        # –£–ø–∞–∫–æ–≤–∫–∞ –¥–ª—è –∏–≥—Ä—ã –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        current_page = ft.Container(
            content=ft.Column(),
            expand=True,
        )

        def show_page(index):
            """
            –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –∏–∑ –ø–æ–ª—è –∏–≥—Ä—ã –∫ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏ –Ω–∞–æ–±–æ—Ä–æ—Ç.
            """
            current_page.content.controls.clear()
            if index == 0:
                current_page.content.controls.append(main_game)
                page.theme_mode = ft.ThemeMode.DARK
            elif index == 1:
                current_page.content.controls.append(ft.Column(
                    [
                        Statistics,
                    ]
                ))
            page.update()

        # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤.
        leaderboard_data = db.fetch_leaderboard_data()
        # –§–ª–∞–≥ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –º–µ–∂–¥—É –≤–∏–¥–∞–º–∏ —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤.
        show_alternative_leaderboard = False

        # –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö.
        def create_leaderboard_table(leaderboard_data):
            try:
                # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É DataTable —Å –ø–æ–º–æ—â—å—é Flet.
                leaderboard_table = ft.DataTable(
                    columns=[
                        ft.DataColumn(ft.Text("–ú–µ—Å—Ç–æ")),
                        ft.DataColumn(ft.Text("–õ–æ–≥–∏–Ω")),
                        ft.DataColumn(ft.Text("–ü–æ–±–µ–¥")),
                        ft.DataColumn(ft.Text("–ò–≥—Ä")),
                        ft.DataColumn(ft.Text("–ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ–±–µ–¥ %"), numeric=True),
                    ],
                    rows=[
                        ft.DataRow(
                            cells=[
                                ft.DataCell(ft.Text(str(i + 1))),
                                ft.DataCell(ft.Text(str(row[0]))),
                                ft.DataCell(ft.Text(str(row[1]))),
                                ft.DataCell(ft.Text(str(row[2]))),
                                ft.DataCell(ft.Text(str(row[3]))),
                            ]
                        ) for i, row in enumerate(leaderboard_data)
                    ]
                )
                # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω—É—é —Ç–∞–±–ª–∏—Ü—É.
                return leaderboard_table
            except Exception as e:
                # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–æ–∫.
                page.add(ft.Text(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}"))
                return None

        # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –º–µ–∂–¥—É –≤–∏–¥–∞–º–∏ —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤.
        def toggle_leaderboard(e):
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º nonlocal, —Ç–∞–∫ –∫–∞–∫ show_alternative_leaderboard –æ–±—ä—è–≤–ª–µ–Ω–∞ –≤–Ω–µ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.
            nonlocal show_alternative_leaderboard
            # –ú–µ–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —Ñ–ª–∞–≥–∞ –Ω–∞ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω–æ–µ.
            show_alternative_leaderboard = not show_alternative_leaderboard
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã.
            leaderboard_container.content = create_leaderboard_table(
                db.fetch_leaderboard_by_win_percentage()
                if show_alternative_leaderboard
                else db.fetch_leaderboard_data()
            )
            if show_alternative_leaderboard:
                text_for_user_table.content = ft.Text(value='–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –ø—Ä–æ—Ü–µ–Ω—Ç—É –ø–æ–±–µ–¥.', width=160)
            else:
                text_for_user_table.content = ft.Text(value='–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø–æ–±–µ–¥.', width=160)
            # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ.
            leaderboard_container.update()
            text_for_user_table.update()

        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü.
        save_button = ft.IconButton(
            icon=ft.Icons.UPDATE,
            on_click=toggle_leaderboard,
        )

        # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã. –í–∞–∂–Ω–æ: –æ–Ω –æ–±—ä—è–≤–ª–µ–Ω –≤–Ω–µ —Ñ—É–Ω–∫—Ü–∏–∏ create_leaderboard_table.
        leaderboard_container = ft.Container(expand=True)
        text_for_user_table = ft.Container(expand=True)
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä.
        leaderboard_container.content = create_leaderboard_table(leaderboard_data)
        text_for_user_table.content = ft.Text(value='–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø–æ–±–µ–¥', width=160)

        # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        Statistics = ft.Container(
            content=ft.Column(
                [
                    # –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞: –ó–∞–≥–æ–ª–æ–≤–æ–∫ "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞" –∏ –∫–Ω–æ–ø–∫–∞ button_sunny
                    ft.Row([button_sunny], alignment=ft.MainAxisAlignment.END),
                    ft.Row([
                        ft.Stack(
                            [
                                ft.Text(
                                    spans=[
                                        ft.TextSpan(
                                            "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
                                            ft.TextStyle(
                                                size=48,
                                                weight=ft.FontWeight.BOLD,
                                                foreground=ft.Paint(
                                                    color=ft.Colors.BLUE_700,
                                                    stroke_width=6,
                                                    stroke_join=ft.StrokeJoin.ROUND,
                                                    style=ft.PaintingStyle.STROKE,
                                                ),
                                            ),
                                        ),
                                    ],
                                ),
                                ft.Text(
                                    spans=[
                                        ft.TextSpan(
                                            "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
                                            ft.TextStyle(
                                                size=48,
                                                weight=ft.FontWeight.BOLD,
                                                color=ft.Colors.GREY_300,
                                            ),
                                        ),
                                    ],
                                ),
                            ],
                        ),
                    ], alignment=ft.MainAxisAlignment.CENTER),
                    # –í—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞: –¢–µ–∫—Å—Ç text_for_user_table –∏ –∫–Ω–æ–ø–∫–∞ save_button
                    ft.Row([text_for_user_table, save_button], alignment=ft.MainAxisAlignment.CENTER),
                    # –¢—Ä–µ—Ç—å—è —Å—Ç—Ä–æ–∫–∞: –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å —Ç–∞–±–ª–∏—Ü–µ–π –ª–∏–¥–µ—Ä–æ–≤
                    ft.Row([leaderboard_container], alignment=ft.MainAxisAlignment.CENTER),
                ]
            )
        )

        # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ä–µ–ª—å—Å–∞
        rail = ft.NavigationRail(
            selected_index=0,
            label_type=ft.NavigationRailLabelType.ALL,
            min_width=100,
            on_change=lambda e: show_page(e.control.selected_index),
            min_extended_width=400,
            group_alignment=-0.9,

            destinations=[
                # –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–≥—Ä—ã
                ft.NavigationRailDestination(
                    icon=ft.Icons.GAMES_OUTLINED,
                    selected_icon=ft.Icons.GAMEPAD_SHARP,
                    label="–ò–≥—Ä–∞",
                ),
                # –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
                ft.NavigationRailDestination(
                    icon=ft.Icons.ANALYTICS_OUTLINED,
                    selected_icon=ft.Icons.ANALYTICS_ROUNDED,
                    label="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
                ),
            ],
            trailing=ft.Column([
                # –ö–Ω–æ–ø–∫–∞ —Å –≤–æ–ø—Ä–æ—Å–∏—Ç–µ–ª—å–Ω—ã–º –∑–Ω–∞–∫–æ–º, –æ—Ç–∫—Ä—ã–≤–∞—é—â–∞—è –¥–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏
                ft.IconButton(icon=ft.Icons.QUESTION_MARK, width=58, height=58,
                              on_click=lambda e: open_dialog(rule_message)),
                # –ö–Ω–æ–ø–∫–∞ —Å –ª–æ–≥–æ—Ç–∏–ø–æ–º GitHub, –æ—Ç–∫—Ä—ã–≤–∞—é—â–∞—è —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ–µ–∫—Ç –Ω–∞ GitHub
                ft.IconButton(
                    content=ft.Image(src="github-mark-white.png", width=32, height=32),
                    width=58,
                    height=58,
                    url='https://github.com/PENROG21/Brick_Game'
                ),
            ], alignment=ft.MainAxisAlignment.CENTER),
            # –ö–Ω–æ–ø–∫–∞ "–î–æ–º–æ–π", –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∞—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
            leading=ft.Row(
                [ft.IconButton(icon=ft.Icons.HOME, width=32, height=58, on_click=lambda _: switching(False))],
                alignment=ft.MainAxisAlignment.END),

            height=600
        )

        # –≠—Ç–æ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω –∏–≥—Ä–æ–≤–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
        main_game = ft.Container(
            image_src='https://cdna.artstation.com/p/assets/images/images/000/548/348/large/'
                      'martin-teichmann-stones-02.jpg?1443931018',
            image_fit=ft.ImageFit.COVER,
            expand=True,
            content=ft.Column(  # –û–±–æ—Ä–∞—á–∏–≤–∞–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ Column
                [
                    ft.Row([welcome_title], alignment=ft.MainAxisAlignment.CENTER),
                    # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
                    ft.Row([output_number_brickse], alignment=ft.MainAxisAlignment.CENTER),
                    ft.Row([ft.Text(value='–°–∫–æ–ª—å–∫–æ –∫–∏—Ä–ø–∏—á–µ–π –≤–æ–∑—å–º—ë—Ç–µ?', size=24, weight=ft.FontWeight.BOLD,
                                    selectable=True)],
                           alignment=ft.MainAxisAlignment.CENTER),
                    # –ö–Ω–æ–ø–∫–∏ —Ö–æ–¥–∞
                    ft.Row(
                        [
                            ft.IconButton(
                                on_click=player_move,
                                data=1,
                                content=ft.Image(
                                    src="icons8-1st-50.png",
                                    width=56,
                                    height=56,
                                    fit=ft.ImageFit.COVER,
                                    repeat=ft.ImageRepeat.NO_REPEAT,
                                )
                            ),
                            ft.IconButton(
                                on_click=player_move,
                                data=2,
                                content=ft.Image(
                                    src="icons8-circled-2-50.png",
                                    width=56,
                                    height=56,
                                    fit=ft.ImageFit.COVER,
                                    repeat=ft.ImageRepeat.NO_REPEAT,
                                )
                            ),
                            ft.IconButton(
                                on_click=player_move,
                                data=3,
                                content=ft.Image(
                                    src="icons8-circled-3-50.png",
                                    width=56,
                                    height=56,
                                    fit=ft.ImageFit.COVER,
                                    repeat=ft.ImageRepeat.NO_REPEAT,
                                )
                            ),
                            # –†–∞–∑–ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ—è.
                            error_message,
                            victory_message,
                            defeat_message,
                            load_message,
                            rule_message
                        ],
                        alignment=ft.MainAxisAlignment.CENTER
                    ),
                    # –ù–∞–¥–ø–∏—Å—å –∫–∞–∫ —Å—Ö–æ–¥–∏–ª –∫–æ–º–ø—å—é—Ç–µ—Ä
                    ft.Row([text_player_move], alignment=ft.MainAxisAlignment.CENTER),
                    # –ö–Ω–æ–ø–∫–∞ –ø–æ–∫–∞–∑–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞.
                    ft.Row([number_wins, show_number_wins], alignment=ft.MainAxisAlignment.CENTER),
                    # –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞.
                    ft.Row([dropdown, download_button], alignment=ft.MainAxisAlignment.CENTER)
                ],
            ),
            clip_behavior=ft.ClipBehavior.ANTI_ALIAS,
        )

        def show_error_template(message: str):
            """
            –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç SnackBar —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ–± –æ—à–∏–±–∫–µ.
            Args:
                message: –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ.
            """
            snack_bar = ft.SnackBar(ft.Text(message), open=True)  # –°–æ–∑–¥–∞–µ–º SnackBar —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º
            page.overlay.append(snack_bar)  # –î–æ–±–∞–≤–ª—è–µ–º SnackBar –≤ overlay —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            page.update()  # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è SnackBar

        def check_email() -> bool:
            """
            –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –∞–¥—Ä–µ—Å –ø–æ—á—Ç—ã.
            –ï—Å–ª–∏ –Ω–µ –≤–µ—Ä–µ–Ω, —Ç–æ –≤—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
            """
            from re import split
            if split(r'@', user_gmail.value)[-1] != 'gmail.com':
                return False
            else:
                return True

        def register(e):
            """
            –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            """
            print(gender_radio.value + ' 1')
            if len(user_password.value) < 6:
                show_error_template("–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ 6 —Å–∏–º–≤–æ–ª–æ–≤ –∏ –±–æ–ª–µ–µ.")
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∞–¥—Ä–µ—Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–∫–∞–∑–∞–Ω.
            elif any(char.isspace() for char in user_password.value):
                show_error_template("–í –ø–∞—Ä–æ–ª–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø—Ä–æ–±–µ–ª–æ–≤.")
            elif len(user_login.value) > 10 or len(user_login.value) < 3:
                show_error_template("–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 3 –¥–æ 10 —Å–∏–º–≤–æ–ª–æ–≤.")
            elif any(char.isspace() for char in user_login.value):
                show_error_template("–í –ª–æ–≥–∏–Ω–µ –Ω–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø—Ä–æ–±–µ–ª–æ–≤.")
            elif any(char.isspace() for char in user_gmail.value):
                show_error_template("–í –ø–æ—á—Ç–µ –Ω–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø—Ä–æ–±–µ–ª–æ–≤.")
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∞–¥—Ä–µ—Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–∫–∞–∑–∞–Ω.
            elif not check_email():
                show_error_template("–ù–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∞–¥—Ä–µ—Å –ø–æ—á—Ç—ã")
            elif db.user_exists_login(user_login.value):
                show_error_template("–≠—Ç–æ –∏–º—è —É–∂–µ –∑–∞–Ω—è—Ç–æ")
            elif db.user_exists_gmail(user_gmail.value):
                show_error_template("–≠—Ç–∞ –ø–æ—á—Ç–∞ —É–∂–µ –∑–∞–Ω—è—Ç–∞")
            else:
                # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ SQL-–∑–∞–ø—Ä–æ—Å–∞
                db.Insert_Users(user_login.value, user_password.value, user_gmail=user_gmail.value,
                                is_man=gender_radio.value,
                                birthdate=(selected_date.value))
                switching(True)

        def auth_user(e):
            """
            –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
            """
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∞–¥—Ä–µ—Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–∫–∞–∑–∞–Ω.
            if check_email():
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∞–∫–∫–∞—É–Ω—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                if not db.check_user(email=user_gmail.value, password=user_password.value):
                    show_error_template('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–¥–µ–Ω –ø–∞—Ä–æ–ª—å –∏–ª–∏ –ø–æ—á—Ç–∞.')
                else:
                    # –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–∞—á–∏–Ω–∞–µ–º –∏–≥—Ä—É.
                    switching(True)
            else:
                show_error_template('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–∫–∞–∑–∞–Ω –∞–¥—Ä–µ—Å –ø–æ—á—Ç—ã')

        def validate(e):
            """
            –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –¥–µ–ª–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º–∏ —Å–º–æ—Ç—Ä—è –ø–æ —É—Å–ª–æ–≤–∏—é
            """
            is_valid = all([
                user_login.value is not None,
                user_password.value is not None,
                user_gmail.value is not None,
                gender_radio.value is not None,
                selected_date.value is not None and len(selected_date.value) > 0,
            ])
            print(gender_radio.value)

            is_value_auth = all([
                user_gmail.value,
                user_password.value
            ])

            btn_auth.disabled = not is_value_auth
            btn_reg.disabled = not is_valid
            btn_password.disabled = not user_password.value
            page.update()

        def validate_PASSWORD(e):
            """
            –§—É–Ω–∫—Ü–∏—è –¥–µ–ª–∞–µ—Ç –≤–∏–¥–Ω—ã–º –ø–∞—Ä–æ–ª—å.
            """
            user_password.password = False if user_password.password is True else True
            page.update()

        btn_password = ft.IconButton(ft.Icons.REMOVE_RED_EYE, on_click=validate_PASSWORD, disabled=True)
        user_password = ft.TextField(label='–ü–∞—Ä–æ–ª—å', password=True, width=320, on_change=validate)

        user_login = ft.TextField(label='–õ–æ–≥–∏–Ω', width=320, on_change=validate, max_length=10, min_lines=3)
        user_gmail = ft.TextField(label='gmail', width=320, on_change=validate)
        btn_reg = ft.OutlinedButton(text='–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è', width=240, on_click=register, disabled=True)
        btn_auth = ft.OutlinedButton(text='–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è', width=240, on_click=auth_user, disabled=True)

        gender_radio = ft.RadioGroup(content=ft.Column([
            ft.Radio(value=True, label="–ú—É–∂—Å–∫–æ–π"),
            ft.Radio(value=False, label="–ñ–µ–Ω—Å–∫–∏–π"),
        ]), on_change=validate)
        gender_radio.value = None  # –ù–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ - –Ω–∏—á–µ–≥–æ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ

        selected_date = ft.TextField(
            label="–í–∞—à–∞ –¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è",
            width=200,
            multiline=False,
            min_lines=6,
            read_only=True,
            value=None,
            on_change=validate
        )

        def handle_change(e):
            selected_date.value = e.control.value.strftime('%Y-%m-%d')
            page.update()

        # –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        panel_register = ft.Row(
            [
                ft.Column(
                    [
                        ft.Row([button_sunny], alignment=ft.MainAxisAlignment.END),
                        ft.Stack(
                            [
                                ft.Text(
                                    spans=[
                                        ft.TextSpan(
                                            "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è",
                                            ft.TextStyle(
                                                size=48,
                                                weight=ft.FontWeight.BOLD,
                                                foreground=ft.Paint(
                                                    color=ft.Colors.BLUE_700,
                                                    stroke_width=6,
                                                    stroke_join=ft.StrokeJoin.ROUND,
                                                    style=ft.PaintingStyle.STROKE,
                                                ),
                                            ),
                                        ),
                                    ],
                                ),
                                ft.Text(
                                    spans=[
                                        ft.TextSpan(
                                            "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è",
                                            ft.TextStyle(
                                                size=48,
                                                weight=ft.FontWeight.BOLD,
                                                color=ft.Colors.GREY_300,
                                            ),
                                        ),
                                    ],
                                ),
                            ]
                        ),
                        user_login,
                        ft.Row([user_password, btn_password]),
                        user_gmail,
                        ft.Text('–í–∞—à –ø–æ–ª'),
                        gender_radio,
                        ft.ElevatedButton(
                            "–í—ã–±—Ä–∞—Ç—å –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è",
                            icon=ft.Icons.CALENDAR_MONTH,
                            on_click=lambda e: page.open(
                                ft.DatePicker(
                                    first_date=datetime.datetime(year=1900, month=1, day=1),
                                    last_date=datetime.datetime(year=2024, month=10, day=1),
                                    on_change=handle_change,
                                )
                            ),
                        ),
                        selected_date,
                        btn_reg,
                    ],
                ),
            ],
            alignment=ft.MainAxisAlignment.CENTER
        )
        # –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        panel_auth = ft.Row(
            [
                ft.Column(
                    [
                        ft.Row([button_sunny], alignment=ft.MainAxisAlignment.END),
                        ft.Stack(
                            [
                                ft.Text(
                                    spans=[
                                        ft.TextSpan(
                                            "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è",
                                            ft.TextStyle(
                                                size=48,
                                                weight=ft.FontWeight.BOLD,
                                                foreground=ft.Paint(
                                                    color=ft.Colors.BLUE_700,
                                                    stroke_width=6,
                                                    stroke_join=ft.StrokeJoin.ROUND,
                                                    style=ft.PaintingStyle.STROKE,
                                                ),
                                            ),
                                        ),
                                    ],
                                ),
                                ft.Text(
                                    spans=[
                                        ft.TextSpan(
                                            "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è",
                                            ft.TextStyle(
                                                size=48,
                                                weight=ft.FontWeight.BOLD,
                                                color=ft.Colors.GREY_300,
                                            ),
                                        ),
                                    ],
                                ),
                            ]
                        ),
                        user_gmail,
                        ft.Row([user_password, btn_password]),
                        btn_auth
                    ]
                )
            ],
            alignment=ft.MainAxisAlignment.CENTER
        )

        def navigate(e):
            """
            –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –ø–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –∏ –Ω–∞ –æ–±–æ—Ä–æ—Ç.
            :param e:
            :return:
            """
            index = page.navigation_bar.selected_index
            page.clean()

            if index == 0:
                page.add(panel_register)
            if index == 1:
                page.add(panel_auth)

        switch = ft.NavigationBar(
            destinations=[
                ft.NavigationBarDestination(icon=ft.Icons.VERIFIED_USER, selected_icon=ft.Icons.VERIFIED_USER_OUTLINED,
                                            label='–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è'),
                ft.NavigationBarDestination(icon=ft.Icons.VERIFIED_USER, selected_icon=ft.Icons.VERIFIED_USER_OUTLINED,
                                            label='–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è')
            ], on_change=navigate
        )

        page.navigation_bar = switch
        # –°—Ç–∞—Ä—Ç–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏—ã
        page.add(
            panel_register
        )
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–æ—Ä—è—á–µ–π –∫–ª–∞–≤–∏—à–∏
        keyboard.add_hotkey('ctrl+s', lambda: switching(False))

    except Exception as e:
        page.add(ft.Text(f"An error occurred: {e}"))


if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    ft.app(target=main)
